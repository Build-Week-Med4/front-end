{"version":3,"sources":["reducers/reducer.js","components/Login.js","actions/actions.js","components/LogInPage.js","components/SignUp.js","components/Weed.js","components/Carousel.js","components/Form.js","utils/PrivateRoute.js","components/NavHeader.js","components/APITest.js","App.js","serviceWorker.js","index.js"],"names":["initialState","isPosting","isLoggingIn","credentials","username","password","token","error","loggingError","LogInPage","styled","div","initialValue","email","connect","state","logIn","creds","dispatch","type","axios","post","then","res","console","log","data","window","localStorage","setItem","payload","catch","err","message","props","useState","formState","setFormState","handleChange","e","target","name","value","onSubmit","preventDefault","htmlFor","id","placeholder","onChange","to","style","color","SignUpForm","makeUser","push","useHistory","formData","setFormData","Weed","Container","Row","weed","map","Col","key","src","url","alt","effects","flavors","Carousel","items","altText","caption","header","UncontrolledCarousel","Form","blankValue","effect","flavor","setForm","buttonDisabled","setButtonDisabled","errors","setErrors","dataSchema","yup","shape","oneOf","inputChange","persist","newFormData","checked","validateChange","validate","valid","useEffect","isValid","className","sm","md","size","offset","response","filter","bud","disabled","PrivateRoute","Component","component","rest","render","getItem","Header","linkText","setLinkText","href","testData","APITest","get","App","exact","path","SignUp","Boolean","location","hostname","match","store","createStore","action","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.48a6b317.chunk.js","sourcesContent":["import { POSTING_USER_CREDS, USER_CREATE_SUCCESS, USER_CREATE_ERROR, LOGGING_IN_STATUS, LOGIN_SUCCESS, LOGIN_ERROR } from '../actions/actions'\r\n\r\nconst initialState = {\r\n    isPosting: false,\r\n    isLoggingIn: false,\r\n    credentials: {\r\n        username: '',\r\n        password: ''\r\n    },\r\n    token: '',\r\n    error: '',\r\n    loggingError: ''\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n        case POSTING_USER_CREDS :\r\n            return {\r\n                ...state,\r\n                isPosting: true\r\n            }\r\n        case USER_CREATE_SUCCESS :\r\n            console.log(action.payload)\r\n            return {\r\n                    ...state,\r\n                    credentials: {\r\n                        username: action.payload.username,\r\n                        password: action.payload.password\r\n                    },\r\n                    error: '',\r\n                    isPosting: false\r\n                }\r\n        case USER_CREATE_ERROR :\r\n            return {\r\n                ...state,\r\n                isPosting: false,\r\n                error: action.payload\r\n            }\r\n        case LOGGING_IN_STATUS :\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                token: action.payload\r\n            }\r\n        case LOGIN_SUCCESS :\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                token: action.payload,\r\n                loggingError: ''\r\n            }\r\n        case LOGIN_ERROR :\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                loggingError: action.payload\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logIn } from '../actions/actions'\r\nimport styled from 'styled-components'\r\n\r\nconst LogInPage = styled.div`\r\n    width: 800px;\r\n    margin: 0 auto;\r\n    padding: 40px 0;\r\n    border-radius: 10px;\r\n    background: #6ed36e;\r\n    display: flex;\r\n    flex-direction: column;\r\n    form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;  \r\n        input {\r\n            width: 70%;\r\n            margin: 0 15%;\r\n        }      \r\n        button {\r\n           width: 150px; \r\n           margin: 20px 0 0 0;\r\n        }\r\n        a button {\r\n            margin-bottom: 20px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst initialValue = {\r\n    email: '',\r\n    password: ''\r\n}\r\n\r\nconst Login = (props) => {\r\n    const [formState, setFormState] = useState(initialValue)\r\n\r\n    const handleChange = e => {\r\n        setFormState({\r\n            ...formState,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.logIn({\r\n            email: 'eve.holt@reqres.in',\r\n            password: 'pistol'\r\n        })\r\n        setFormState(initialValue)\r\n    }\r\n    \r\n    return(\r\n        <LogInPage>\r\n            <form onSubmit={handleSubmit} >\r\n                <legend>Enter Username (email) and Password</legend>\r\n                <label htmlFor='email' />email :\r\n                    <input \r\n                        type='text'\r\n                        name='email'\r\n                        id='email'\r\n                        placeholder='Enter Email(Username)'\r\n                        value={formState.email}\r\n                        onChange={handleChange}\r\n                    />\r\n                <label htmlFor='password' />Password :\r\n                    <input \r\n                        type='password'\r\n                        name='password'\r\n                        id='password'\r\n                        placeholder='Enter Password'\r\n                        value={formState.password}\r\n                        onChange={handleChange}\r\n                    />\r\n                <button type='submit'>Log In</button>\r\n                <Link to='/sign-up'><button>sign up</button></Link>\r\n                {props.isLoggingIn ? <p style={{color: 'red'}}>Signing In...</p> : null}\r\n                {props.loggingError ? <p style={{color: 'red'}}>There was an error...{props.loggingError}</p> : null}\r\n            </form>\r\n        </LogInPage>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ...state,\r\n        isLoggingIn: state.isLoggingIn,\r\n        loggingError: state.loggingError\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { logIn })(Login)","import axios from 'axios'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport const POSTING_USER_CREDS = 'POSTING_USER_CREDS'\r\nexport const USER_CREATE_SUCCESS = 'USER_CREATE_SUCCESS'\r\nexport const USER_CREATE_ERROR = 'USER_CREATE_ERROR'\r\n\r\nexport const LOGGING_IN_STATUS = 'LOGGING_IN_STATUS'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR'\r\n\r\nexport const makeUser = (creds) => dispatch => {\r\n    console.log('in the makeUser function')\r\n    dispatch({ type: POSTING_USER_CREDS });\r\n\r\n    axios.post('https://reqres.in/api/users', creds)\r\n    .then(res => {\r\n        console.log(res.data)\r\n        dispatch({ type: USER_CREATE_SUCCESS, payload: res.data })\r\n    })\r\n    .catch(err => {\r\n        console.log(err.message)\r\n        dispatch({ type: USER_CREATE_ERROR, payload: err.message })\r\n    })\r\n}\r\n\r\nexport const logIn = (creds) => dispatch => {\r\n\r\n    dispatch({ type: LOGGING_IN_STATUS })\r\n\r\n    axios.post('https://reqres.in/api/login', creds)\r\n    .then(res => {\r\n        console.log('action.js: logIn: success: ', res.data.token)\r\n        window.localStorage.setItem('token', res.data.token)\r\n        dispatch({ type: LOGIN_SUCCESS, payload: res.data.token })\r\n    })\r\n    .catch(err => {\r\n        console.log(err.message)\r\n        dispatch({ type: LOGIN_ERROR, payload: err.message })\r\n    })\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Login from './Login'\r\n\r\nconst LogInPage = () => {\r\n    \r\n    return(\r\n        <>\r\n            <Login />\r\n            {/* <Link to='/api-test'><button>API Test</button></Link> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogInPage","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { makeUser } from '../actions/actions'\r\nimport styled from 'styled-components'\r\n\r\nconst SignUpForm = styled.div`\r\n    width: 800px;\r\n    margin: 0 auto;\r\n    padding: 40px 0;\r\n    border-radius: 10px;\r\n    background: #6ed36e;\r\n    display: flex;\r\n    flex-direction: column;\r\n    form {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;  \r\n        input {\r\n            width: 70%;\r\n            margin: 0 15%;\r\n        }      \r\n        button {\r\n        width: 150px; \r\n        margin: 20px 0 0 0;\r\n        }\r\n        a button {\r\n            margin-bottom: 20px;\r\n        }\r\n    }\r\n`;\r\n\r\nconst SignUp = (props) => {\r\n    const { push } = useHistory()\r\n    const [formData, setFormData] = useState({\r\n        username: '', \r\n        password: ''\r\n    })\r\n\r\n    const handleChange = e => {\r\n        console.log(formData.username)\r\n        setFormData({\r\n            ...formData,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if(formData.username && formData.password){            \r\n            props.makeUser(formData)\r\n            return push('/')\r\n        }\r\n\r\n        return setFormData({\r\n            username: '',\r\n            password: ''\r\n        })\r\n    }\r\n    \r\n    return(\r\n        <SignUpForm>\r\n            <form onSubmit={handleSubmit} >\r\n                <legend>Input New Username and Create a Password</legend>\r\n                <label htmlFor='username' />Enter Username: \r\n                <input\r\n                    type='text'\r\n                    name='username'\r\n                    id='username'\r\n                    placeholder='Please Enter Your Email'\r\n                    value={formData.username}\r\n                    onChange={handleChange}\r\n                />\r\n                <label htmlFor='password' />Enter Password: \r\n                <input\r\n                    type='password'\r\n                    name='password'\r\n                    id='password'\r\n                    placeholder='Please Create a Password'\r\n                    value={formData.password}\r\n                    onChange={handleChange}\r\n                />\r\n                <button type='submit'>Submit</button>\r\n                {props.isPosting ? <p style={{color: 'red'}} >Signing Up...</p> : null}\r\n                {props.error ? <p style={{color: 'red'}} >unsuccessful post</p> : null}\r\n            </form>\r\n        </SignUpForm>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ...state,\r\n        isPosting: state.isPosting,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { makeUser })(SignUp)","import React from \"react\";\r\nimport { Container, Row, Col } from 'reactstrap';\r\n\r\nconst Weed = (props) => {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n        <div>\r\n            {props.weed.map(weed => (\r\n             <Col>\r\n                <div key={weed.id}>\r\n                    <img src = {weed.url} alt = \"Bud type\" />\r\n                    <h2>{weed.name}</h2>\r\n                    <p>{weed.effects}</p>\r\n                    <p>{weed.flavors}</p>\r\n                </div>\r\n             </Col>\r\n            ))}\r\n        </div>\r\n        </Row>\r\n      </Container>\r\n    );\r\n};\r\n\r\nexport default Weed;","import React from 'react';\r\nimport { UncontrolledCarousel } from 'reactstrap';\r\nconst Carousel = () => {\r\n     const items = [\r\n    {\r\n      src: 'https://medcabinet4.netlify.app/images/canna01_.jpg',\r\n      altText: 'Weed 1',\r\n      caption: \"OUR CABINET HAS IT ALL Find a strain that suits your perfect mood and favorite flavor. Browse all that the cannabis industry has to offer\",\r\n      header: 'Sour Diesal',\r\n      key: '1'\r\n    },\r\n    {\r\n      src: 'https://medcabinet4.netlify.app/images/injar02.jpg',\r\n      altText: 'AK-47',\r\n      caption: 'FILL UP YOUR CABINET FOR LATER',\r\n      header: 'AK 47',\r\n      key: '2'\r\n    },\r\n    {\r\n      src: 'https://images.unsplash.com/photo-1503262028195-93c528f03218?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=400&q=60',\r\n      altText: 'OG',\r\n      caption: \"Sometime's it takes Sativa\",\r\n      header: 'OG',\r\n      key: '3'\r\n    }\r\n  ];\r\n  const thisExample = () => <UncontrolledCarousel items={items} />;\r\n  return (\r\n      <div>\r\n  {thisExample()}\r\n  </div>\r\n  )\r\n}\r\nexport default Carousel;","import React, {useState,useEffect} from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as yup from \"yup\";\r\nimport Weed from './Weed.js';\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport Carousel from './Carousel.js'\r\n\r\n//work around login to render form component \r\n//window.localStorage.setItem('token', '1234')\r\n\r\n//Form Function\r\nconst Form = () => {\r\n\r\n//setting a push method from the useHistory hook in order to return application to the main login (home) component\r\nconst { push } = useHistory()\r\n\r\n//setting Data for object to backend \r\nconst [data,setData] = useState([]);\r\n\r\n//blank state for the form data \r\nconst blankValue =  {\r\n    effect: \"\",\r\n    flavor:\"\"\r\n }\r\n //setting form state\r\nconst [formState,setForm] = useState(blankValue);\r\n\r\n//state for button\r\nconst [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n//state for errors \r\nconst [errors, setErrors] = useState({\r\n    effect: \"\",\r\n    flavor:\"\"\r\n})\r\n\r\n//setting up yup schema object \r\n\r\nconst dataSchema = yup.object().shape({\r\n    effects: yup.string().oneOf([\"Creative\",\"Focused\"],\"Please select a desired effect\"),\r\n      flavors: yup.string().oneOf([\"Earthy\"],\"Please select a desired Flavor\")\r\n  });\r\n\r\n//onChange function to watch for changes in form values \r\nconst inputChange = e => {\r\n    e.persist();\r\n    const newFormData = {\r\n        ...formState, [e.target.name] : e.target.type === \"checkbox\" ? e.target.checked : e.target.value\r\n    }\r\n    validateChange(e); \r\n    setForm(newFormData);\r\n}\r\n\r\n//validating that the form has inputs and setting errors with yup\r\nconst validateChange = (e) => {\r\n    yup\r\n      .reach(dataSchema, e.target.name)\r\n      .validate(e.target.name === \"terms\" ? e.target.checked : e.target.value) \r\n      .then((valid) => {\r\n        setErrors({\r\n          ...errors,\r\n          [e.target.name]: \"\"\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n\r\n        // set error in state\r\n        setErrors({\r\n          ...errors,\r\n          [e.target.name]: err.errors[0]\r\n        });\r\n      });\r\n  };\r\n//submit function to record the data in a json structure with an api HLKs5e3\r\nconst formSubmit = e => {\r\n    e.preventDefault();\r\n    axios.post(\"https://med-cab4.herokuapp.com/predict\",formState)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            const newData = response.data.filter((bud => {\r\n                return bud.effect === formState.effect\r\n              })\r\n              )\r\n            setForm(blankValue);\r\n            //console logging the example data api\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\n//use effect to make sure person provides an effect \r\nuseEffect(() => {\r\n    axios.post(\"https://med-cab4.herokuapp.com/predict\")\r\n    .then(res => {\r\n        console.log(res)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n    dataSchema.isValid(formState).then((isValid) => {\r\n        setButtonDisabled(!isValid)\r\n    });\r\n}, [formState]);\r\n\r\nreturn (\r\n    <div>\r\n        <Container>\r\n         <Row className = \"sizing\" >\r\n           <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\r\n            <Carousel/>\r\n           </Col>\r\n         </Row>\r\n         <form onSubmit = {formSubmit}>\r\n         <Row>\r\n             <Col>\r\n             <label htmlFor = \"effects\">\r\n                 Effect you're Looking for:\r\n                <select name =\"effects\" onChange = {inputChange} value= {formState.effects}>\r\n                    <option value = 'Energetic'>Energetic</option>\r\n                    <option value = 'Tingly'>Tingly</option>\r\n                    <option value = 'Euphoric'>Euphoric</option>\r\n                    <option value = 'Relaxed'>'Relaxed'</option>\r\n                    <option value = 'Aroused'>'Aroused'</option>\r\n                    <option value = 'Happy'>'Happy'</option>\r\n                    <option value = {null}></option>\r\n                    <option value = {null}></option>\r\n                    <option value = {null}></option>\r\n                    <option value = {null}></option>\r\n                    <option value = {null}></option>\r\n                    <option value = {null}></option>\r\n                    <option value = {null}></option>\r\n                    <option value = {null}></option>\r\n                    <option value = {null}></option>\r\n                    <option value = \"Creative\">Creative</option>\r\n                    <option value = \"Focused\">Focused</option>\r\n                </select>\r\n             </label>\r\n             </Col>\r\n             <Col>\r\n             <label htmlFor = \"flavors\">\r\n                 Flavor you're Looking for:\r\n                <select name =\"flavors\" onChange = {inputChange} value= {formState.flavors}>\r\n                    <option value = {null}></option>\r\n                    <option value = \"Earthy\">Earthy</option>\r\n                </select>\r\n             </label>\r\n             </Col>\r\n             </Row>\r\n             <button className = \"Danger\" disabled = {buttonDisabled} type = \"submit\">Submit</button>\r\n         </form>\r\n         </Container>\r\n         <Container>\r\n         <Weed weed = {data} />\r\n         </Container>\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Form;","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    return <Route\r\n                {...rest}\r\n                render={() => {\r\n                    if(window.localStorage.getItem('token')){\r\n                        return <Component />\r\n                    }\r\n                    return <Redirect to='/' />\r\n                }}\r\n            />\r\n}\r\n\r\nexport default PrivateRoute","import React, { useState, useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport styled from 'styled-components'\r\n\r\nconst Header = styled.div`\r\n    width: 100%;\r\n    height: 90px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 20px 40px 10px 40px;\r\n    background: rgba(0, 100, 0, .2);\r\n    color: white;\r\n    span {\r\n        width: 50px;\r\n        height: 50px;\r\n        img {\r\n            max-width: 100%;\r\n        }\r\n    }\r\n    div {\r\n        width: 50%;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        a {\r\n            color: #007e00;\r\n            &:hover {\r\n                color: #04f204;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nconst NavHeader = (props) => {\r\n    const [linkText, setLinkText] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(props.token){\r\n            setLinkText(\"Find Recommendations\")\r\n        }\r\n    }, [props.token])\r\n\r\n    return (\r\n        <Header>\r\n            <span><img src='https://smallimg.pngkey.com/png/small/60-600941_cannabis-registration-green-medical-cross-logo.png' alt='medicinal marijuana cross' /></span>\r\n            <div>\r\n                <a href='https://medcabinet4.netlify.app/'>Marketing Page</a>\r\n                <NavLink to='/'>Login / SignUp</NavLink>\r\n                <NavLink to='/user-form'>{linkText}</NavLink>\r\n            </div>\r\n        </Header>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ...state,\r\n        token: state.token\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(NavHeader)","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst testData = {\r\n    \"effect\": \"Creative\",\r\n    \"flavor\": \"Blueberry\"\r\n}\r\n\r\nconst APITest = () => {\r\n    const [data, setData] = useState({})\r\n\r\n    useEffect(() => {\r\n        axios.get('https://med-cab4.herokuapp.com/predict', testData)\r\n        .then(res => {\r\n            console.log(res.data)\r\n        })\r\n        .catch(err => {\r\n            console.log(err.message)\r\n        })\r\n    }, [])\r\n    \r\n    return(\r\n        <>\r\n            <p>inside of APITest</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default APITest","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\r\nimport LogInPage from './components/LogInPage'\r\nimport SignUp from './components/SignUp'\r\n\r\nimport Form from './components/Form'\r\nimport PrivateRoute from './utils/PrivateRoute'\r\nimport NavHeader from './components/NavHeader'\r\nimport './App.css';\r\nimport APITest from './components/APITest';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <NavHeader />\r\n      <div className=\"chilled\">\r\n        <Switch>\r\n          <PrivateRoute exact path='/user-form' component={Form} />\r\n          <Route path='/sign-up' component={SignUp} />\r\n          <Route path='/api-test' component={APITest} />\r\n          <Route exact path='/' component={LogInPage} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { reducer } from './reducers/reducer'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}